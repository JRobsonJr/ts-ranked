{"version":3,"sources":["components/app/Navbar.js","components/home/HomePage.js","api/albums.js","components/common/ReorderTracksTable.js","components/selection-page/SelectedTracksSection.js","components/selection-page/SelectionPageFooter.js","components/selection-page/AlbumAccordion.js","components/selection-page/TrackSelectionSection.js","api/requests.js","components/selection-page/SelectionPage.js","components/ranking-page/RankingPageTrackList.js","components/common/PageWrapper.js","components/ranking-page/RankingPage.js","components/common/TrackListTable.js","api/images.js","components/spotify/SpotifyConnectButton.js","components/spotify/SpotifyGeneratePlaylistButton.js","components/sharing-page/SharingPageFooter.js","components/sharing-page/SharingPage.js","components/results-page/ResultsPage.js","components/spotify/SpotifyAuth.js","components/app/App.js","index.js"],"names":["NavbarCollapseButton","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavbarLinkList","id","react_router_dom","to","Navbar","Navbar_NavbarCollapseButton","Navbar_NavbarLinkList","LoverSection","src","alt","role","href","MainSection","AboutSection","rel","target","RestrictionsSection","ContactSection","HomePage_SocialMediaButton","text","SocialMediaButton","_ref","StartSection","HomePage","HomePage_MainSection","HomePage_StartSection","HomePage_LoverSection","HomePage_AboutSection","HomePage_RestrictionsSection","HomePage_ContactSection","albums","name","year","spotifyId","imageUrl","tracks","bonus","albumName","getTrack","_i","_albums","length","album","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","track","value","err","return","Error","getFullTrackId","shortenedId","_i2","_albums2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","slice","getTrackByShortenedId","TrackListTableRow","_ref2","trackId","index","removeTrack","moveTrack","tracksLength","_getTrack","scope","width","ReorderTracksTable_OrderControlButtonGroup","trackIndex","OrderControlButtonGroup","_ref3","ReorderTracksTable_OrderControlButton","direction","disabled","onClick","OrderControlButton","_ref4","concat","ReorderTracksTable","tableRows","map","ReorderTracksTable_TrackListTableRow","SelectedTracksSection","common_ReorderTracksTable","SelectionPageFooter","submitRanking","redirectParams","pathname","search","AlbumCard","handleClick","selectedTracks","AlbumAccordion_AlbumCardCollapseButton","AlbumAccordion_AlbumCardTrackList","AlbumCardCollapseButton","AlbumCardTrackList","_ref4$collapse","collapse","trackListItems","AlbumAccordion_AlbumCardTrackListItem","selected","includes","aria-labelledby","data-parent","AlbumCardTrackListItem","_ref5","AlbumAccordion","albumCards","AlbumAccordion_AlbumCard","OverallTrackSelectionSection","components_selection_page_AlbumAccordion","LoverTracksSelectionSection","TrackSelectionSection","TrackSelectionSection_LoverTracksSelectionSection","TrackSelectionSection_OverallTrackSelectionSection","axiosInstance","axios","create","baseURL","postRanking","post","then","response","data","SelectionPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","regenerator_default","mark","_callee","_this$state","itemName","contributed","wrap","_context","prev","state","setState","localStorage","setItem","res","console","log","stop","prevState","filter","push","join","_this$state2","auxIndex","aux","splice","queryString","parse","location","getItem","split","_this$state3","selection_page_TrackSelectionSection","selection_page_SelectedTracksSection","selection_page_SelectionPageFooter","Component","isAlbumRanking","albumImage","RankingPageTrackList","sort","b","score","RankingPageTrackList_TrackListTableRow","PageWrapper","children","RankingPage","loverTracks","overallTracks","_this2","get","components_common_PageWrapper","components_ranking_page_RankingPageTrackList","TrackListTable","isSharingPage","TrackListTable_TrackListTableRow","saveRankingAsPng","headers","Authorization","_callee2","node","blob","_context2","getRankingBlob","sent","saveAs","_x2","apply","arguments","_callee3","_context3","domtoimage","toBlob","style","height","top","position","left","bgcolor","abrupt","_x3","buildAuthUrl","encodeQueryParams","client_id","response_type","redirect_uri","params","keys","param","encodeURIComponent","SpotifyConnectButton","SpotifyGeneratePlaylistButton","userId","ids","generatePlaylist","newPlaylist","createPlaylist","description","addTracksToPlaylist","i","_x","ShareToTwitterButton","favoriteTrack","resultsUrl","twitterParams","hashtags","url","SharingPageFooter_ShareToSocialMediaButton","baseUrl","ShareToTumblrButton","tumblrParams","canonicalUrl","posttype","tags","content","caption","SaveAsPngButton","document","getElementById","ShareToSocialMediaButton","buildUrl","toLowerCase","encodeParam","SharingPageFooter","spotifyToken","spotifyUserId","isOverallRanking","t","spotifyButton","spotify_SpotifyGeneratePlaylistButton","spotify_SpotifyConnectButton","SharingPageFooter_SaveAsPngButton","SharingPageFooter_ShareToTumblrButton","SharingPageFooter_ShareToTwitterButton","SharingPage","token","init","getCurrentUserProfile","user","SharingPage_SharingPageRanking","components_common_TrackListTable","sharing_page_SharingPageFooter","react_router","SharingPageRanking","ResultsPage","queryParams","fullIds","match","SpotifyAuth","history","hash","App","Fragment","components_app_Navbar","exact","path","component","ReactDOM","render","basename","process","app_App"],"mappings":"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","file":"static/js/main.b791ed3d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nconst Navbar = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <Link className=\"navbar-brand\" to=\"/\">\n            <b>TS RANKED</b>\n        </Link>\n        <NavbarCollapseButton />\n        <NavbarLinkList />\n    </nav>\n);\n\nconst NavbarCollapseButton = () => (\n    <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n    >\n        <span className=\"navbar-toggler-icon\" />\n    </button>\n);\n\nconst NavbarLinkList = () => (\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/\">\n                    HOME <span className=\"sr-only\">(current)</span>\n                </Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/ranking\">\n                    RANKING\n                </Link>\n            </li>\n        </ul>\n    </div>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './HomePage.css';\n\nconst HomePage = () => (\n    <div className=\"mx-1\">\n        <MainSection />\n        <StartSection />\n        <LoverSection />\n        <AboutSection />\n        <RestrictionsSection />\n        <ContactSection />\n    </div>\n);\n\nconst LoverSection = () => (\n    <div className=\"container container-home text-center\">\n        <div className=\"row\">\n            <div className=\"col-md-6 align-self-center\">\n                <img\n                    src=\"https://i.scdn.co/image/e30b81b756002dffe808888a4b67461e15e67681\"\n                    className=\"ranking-example pl-3 py-3\"\n                    alt=\"Lover\"\n                />\n            </div>\n            <div className=\"col-md-6 align-self-center\">\n                <h1 className=\"display-5\">\n                    And there's also the healthier option: <i>Lover</i> is out\n                    now!\n                </h1>\n                <h3>\n                    Taylor's seventh studio album is also her most critically\n                    acclaimed body of work up to date.\n                </h3>\n                <h5>\n                    Can you choose your favorite <b>13</b> Lover songs?\n                </h5>\n                <h5>The good ones never wait, so...</h5>\n                <div className=\"btn-group mr-2\" role=\"group\">\n                    <Link\n                        className=\"btn btn-lg btn-outline-dark badge-pill\"\n                        to=\"/select?album=lover\"\n                    >\n                        START NOW\n                    </Link>\n                    <a\n                        className=\"btn btn-lg btn-outline-dark badge-pill\"\n                        href=\"https://taylorswift.lnk.to/loverWe\"\n                    >\n                        STREAM LOVER\n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n);\n\nconst MainSection = () => (\n    <div className=\"container container-home text-center\">\n        <h1 className=\"display-2\">Taylor Swift Ranked</h1>\n        <h3>\n            Singer-songwriter Taylor Swift has released seven studio albums and\n            a handful of singles throughout her career.\n        </h3>\n        <h5>\n            Can you choose your favorite <b>13</b> songs out of her discography?\n        </h5>\n    </div>\n);\n\nconst AboutSection = () => (\n    <div className=\"container container-home\">\n        <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <h1 className=\"display-4\">And that's how it works...</h1>\n                <h4>\n                    It's pretty simple: select 13 songs and reorder them from\n                    favorite to least favorite. In the end, you'll be able to\n                    generate a cool image you can use to share on social media\n                    and to save your Top 13 as a Spotify playlist. Here's an\n                    example of how it should look like: my ranking!\n                </h4>\n                <h5>\n                    If you share yours on Twitter, Tumblr or other social media,\n                    use the hashtag <b>#TaylorSwiftRanked</b> so that I can\n                    check it out!{' '}\n                    <a\n                        href=\"https://breathedintheinvisiblesmoke.tumblr.com\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                    >\n                        Here's mine posted on Tumblr!\n                    </a>\n                </h5>\n                <h5>\n                    After you finish your Top 13, it will be sent to an{' '}\n                    <Link\n                        to=\"/ranking\"\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                    >\n                        overall ranking\n                    </Link>{' '}\n                    made with all submissions. Let's see how your favorite\n                    tracks compare to other people's favorites!\n                </h5>\n            </div>\n            <div className=\"col-lg-6 align-self-center\">\n                <img\n                    src=\"assets/tsranked-top13-example.png\"\n                    className=\"ranking-example\"\n                    alt=\"My ranking\"\n                />\n            </div>\n        </div>\n    </div>\n);\n\nconst RestrictionsSection = () => (\n    <section className=\"container container-home\">\n        <h1>\n            Wait, where's <i>[unreleased 2005 demo song]</i>?\n        </h1>\n        <h5>\n            Note that only tracks that were officially released by Taylor are\n            listed. Another little restriction was to only include songs in\n            which she was credited as one of the writers, being the reason why\n            all of her officially released covers are not listed (except for{' '}\n            <i>Untouchable</i> since she earned a writing credit for it).\n        </h5>\n    </section>\n);\n\nconst ContactSection = () => (\n    <section className=\"container container-home\">\n        <h1>Contact</h1>\n        <div className=\"row\">\n            <div className=\"col-lg-7\">\n                <h5>\n                    As a fellow Swiftie, find me on <b>Twitter</b> or{' '}\n                    <b>Tumblr</b>. Hey, let's be friends!\n                </h5>\n                <h5>\n                    As a developer, you can find me on <b>GitHub</b>. If you\n                    have any issues using this tool, please, contact me!\n                </h5>\n            </div>\n            <div className=\"col-lg-5\">\n                <SocialMediaButton\n                    text=\"Twitter (@SoftCircuits)\"\n                    href=\"https://twitter.com/SoftCircuits\"\n                />\n                <SocialMediaButton\n                    text=\"Tumblr (@breathedintheinvisiblesmoke)\"\n                    href=\"https://breathedintheinvisiblesmoke.tumblr.com\"\n                />\n                <SocialMediaButton\n                    text=\"GitHub (/JRobsonJr)\"\n                    href=\"https://github.com/JRobsonJr\"\n                />\n            </div>\n        </div>\n    </section>\n);\n\nconst SocialMediaButton = ({ text, href }) => (\n    <a\n        className=\"btn btn-block btn-outline-dark badge-pill\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={href}\n    >\n        {text}a\n    </a>\n);\n\nconst StartSection = () => (\n    <section className=\"container container-home text-center\">\n        <h5>I don't think you should wait. I think you should...</h5>\n        <Link className=\"btn btn-lg btn-outline-dark badge-pill\" to=\"/select\">\n            START NOW!\n        </Link>\n    </section>\n);\n\nexport default HomePage;\n","export const albums = [\n    {\n        name: 'Taylor Swift',\n        year: 2006,\n        spotifyId: '5eyZZoQEFQWRHkV2xgAeBw',\n        imageUrl: 'assets/covers/taylor_swift.jpeg',\n        tracks: [\n            { name: 'Tim McGraw', spotifyId: '2Fn01AIMyHbha2ceNQeOqw' },\n            { name: 'Picture To Burn', spotifyId: '4BYejINgfZF0qKDMEH2cim' },\n            {\n                name: 'Teardrops On My Guitar',\n                spotifyId: '2TF4UtYreqNbQ6Z9AccldU',\n            },\n            {\n                name: 'A Place in this World',\n                spotifyId: '1oR4MUBpyNrAViC8wPNpfm',\n            },\n            { name: 'Cold As You', spotifyId: '569sXXQ7t0jSdqHooi2yqs' },\n            { name: 'The Outside', spotifyId: '5Tj2MqcFMf60CaGsKbM1aq' },\n            {\n                name: 'Tied Together with a Smile',\n                spotifyId: '2zzxwmoOBnXDT0KnJsoIWk',\n            },\n            { name: 'Stay Beautiful', spotifyId: '41sjzdjScVwnxnxADElts6' },\n            { name: \"Should've Said No\", spotifyId: '6CdaXOq1MWe2JHDalTG01d' },\n            {\n                name: \"Mary's Song (Oh My My My)\",\n                spotifyId: '2O8sogKJCfVZ4rotBv1vVF',\n            },\n            { name: 'Our Song', spotifyId: '1j6gmK6u4WNI33lMZ8dC1s' },\n            {\n                name: \"I'm Only Me When I'm With You\",\n                spotifyId: '7CzxXgQXurKZCyHz9ufbo1',\n                bonus: true,\n            },\n            {\n                name: 'Invisible',\n                spotifyId: '1k3PzDNjg38cWqOvL4M9vq',\n                bonus: true,\n            },\n            {\n                name: 'A Perfectly Good Heart',\n                spotifyId: '0YgHuReCSPwTXYny7isLja',\n                bonus: true,\n            },\n            { name: \"I'd Lie\", spotifyId: 'unavailable', bonus: true },\n        ],\n    },\n    {\n        name: 'Fearless',\n        year: 2008,\n        spotifyId: '2gP2LMVcIFgVczSJqn340t',\n        imageUrl: 'assets/covers/fearless.jpeg',\n        tracks: [\n            { name: 'Fearless', spotifyId: '2okho7vU7Nsq1UZD0kgIMi' },\n            { name: 'Fifteen', spotifyId: '5Ora3Ish2A1JN5veGYTxhw' },\n            { name: 'Love Story', spotifyId: '5hnJCRSo4pxRsaEwT9YusG' },\n            { name: 'Hey Stephen', spotifyId: '3CI1f4yLwdHzcUnH7o0Xyh' },\n            { name: 'White Horse', spotifyId: '5yKB8qcTSflDercM2PXwot' },\n            { name: 'You Belong With Me', spotifyId: '4kgTdThcDHfuDS2kKxB7Lc' },\n            { name: 'Breathe', spotifyId: '23qIWGhpwvDgC23TyZOUck' },\n            { name: 'Tell Me Why', spotifyId: '4x7Gxk2GfwZJcqpoVT1PbR' },\n            { name: \"You're Not Sorry\", spotifyId: '3JhvYnOfKLJuWC7jEU0GmJ' },\n            {\n                name: 'The Way I Loved You',\n                spotifyId: '4pEZUytwBzha5Un6m3SCFf',\n            },\n            { name: 'Forever & Always', spotifyId: '3NKCWBT2uKp8rxSkcvIrdX' },\n            { name: 'The Best Day', spotifyId: '7CjuAoOiSrwWv7wJonAUmw' },\n            { name: 'Change', spotifyId: '3gFaNwyiafgUoQhR0pHYA9' },\n            {\n                name: 'Jump Then Fall',\n                spotifyId: '6WWvcA62QlnRguluWAk6bv',\n                bonus: true,\n            },\n            {\n                name: 'Untouchable',\n                spotifyId: '6ovFJkdau79DuXEvQjPaNH',\n                bonus: true,\n            },\n            {\n                name: 'Come In With The Rain',\n                spotifyId: '0cEG04R5cldkTLzK6phlcn',\n                bonus: true,\n            },\n            {\n                name: 'SuperStar',\n                spotifyId: '0XfTh16YcKPzdxMPTeKTAq',\n                bonus: true,\n            },\n            {\n                name: 'The Other Side Of The Door',\n                spotifyId: '1yDJcXc549N6AabNBzFAku',\n                bonus: true,\n            },\n        ],\n    },\n    {\n        name: 'Speak Now',\n        year: 2010,\n        spotifyId: '6S6JQWzUrJVcJLK4fi74Fw',\n        imageUrl: 'assets/covers/speak_now.jpeg',\n        tracks: [\n            { name: 'Mine', spotifyId: '0OAHsZ8vrS2NKom3cvfJQD' },\n            { name: 'Sparks Fly', spotifyId: '09cM9BjyNFizKUOXh6j9rT' },\n            { name: 'Back To December', spotifyId: '0tr6XR58KBdDYd8qvHVTs8' },\n            { name: 'Speak Now', spotifyId: '2PBghI9zJkQEWBzMSMo2Ki' },\n            { name: 'Dear John', spotifyId: '1GeLxMgpeCnMJntwyW6rLw' },\n            { name: 'Mean', spotifyId: '6yM6QsnTCTVOkKEvg3hGlo' },\n            { name: 'The Story Of Us', spotifyId: '7vBlnGdfOLzVEqiOQQxeU8' },\n            { name: 'Never Grow Up', spotifyId: '57w0Uyk2jJAkO2hMJ36xJZ' },\n            { name: 'Enchanted', spotifyId: '3sqrvkNC6IPTIXvvbx9Arw' },\n            {\n                name: 'Better Than Revenge',\n                spotifyId: '55mh9j2aB7xZ1Oh463gK8k',\n            },\n            { name: 'Innocent', spotifyId: '4LraIz87diVQdDK0rhi0S4' },\n            { name: 'Haunted', spotifyId: '72idZxdEHLbi2YI486c3sE' },\n            { name: 'Last Kiss', spotifyId: '1VCJ7vk3Y2DoJIAEOXe3V8' },\n            { name: 'Long Live', spotifyId: '7BFc7ffruhZ4Hecnqf5xju' },\n            { name: 'Ours', spotifyId: '0hK93KD6Y0j9giUGh4Valj', bonus: true },\n            {\n                name: 'If This Was A Movie',\n                spotifyId: '5tSmAABuoOfR59lrtXdDqm',\n                bonus: true,\n            },\n            {\n                name: 'Superman',\n                spotifyId: '6aJ0ipi4EPmu1aTbFeXZnw',\n                bonus: true,\n            },\n        ],\n    },\n    {\n        name: 'Red',\n        year: 2012,\n        spotifyId: '1KVKqWeRuXsJDLTW0VuD29',\n        imageUrl: 'assets/covers/red.jpeg',\n        tracks: [\n            { name: 'State Of Grace', spotifyId: '0b16LTzby1YRVd2nq2Z0fw' },\n            { name: 'Red', spotifyId: '7gJtmLyPTwKzhGzMBXtuXH' },\n            { name: 'Treacherous', spotifyId: '7nECwCDHS1JvQbrmuorZIH' },\n            {\n                name: 'I Knew You Were Trouble.',\n                spotifyId: '3lKZf71jeNi14udIFPJ29V',\n            },\n            { name: 'All Too Well', spotifyId: '6GNRkaWUB0Lwc19SdkTgx8' },\n            { name: '22', spotifyId: '3WC5CVAahvn98hiseoIvbw' },\n            { name: 'I Almost Do', spotifyId: '1eyqSYBCTane4rl4vc6PWJ' },\n            {\n                name: 'We Are Never Ever Getting Back Together',\n                spotifyId: '6kISMRfweKSvgHR0urMQFG',\n            },\n            { name: 'Stay Stay Stay', spotifyId: '0F2S1QlnMaOfmNHIgmES3k' },\n            { name: 'The Last Time', spotifyId: '2Tz4JnXZOcjcp8fWfMjBBk' },\n            { name: 'Holy Ground', spotifyId: '3KmYVOuK2eG7LGP7qQ8DLR' },\n            {\n                name: 'Sad Beautiful Tragic',\n                spotifyId: '70e9zuv2pJc7ON1OUAJ1zl',\n            },\n            { name: 'The Lucky One', spotifyId: '5VQLMrWhailAhErKNUSnv1' },\n            {\n                name: 'Everything Has Changed',\n                spotifyId: '5PjfMmF06QtxTPZBZHdhoZ',\n            },\n            { name: 'Starlight', spotifyId: '1gL4vMhDV3RgJQmDuY5HK1' },\n            { name: 'Begin Again', spotifyId: '1yG491M3fRfowMdGN5pey4' },\n            {\n                name: 'The Moment I Knew',\n                spotifyId: '4qTAwKJQ68gmnrnfPD3vlO',\n                bonus: true,\n            },\n            {\n                name: 'Come Back...Be Here',\n                spotifyId: '1n8rB9AhxiAvVP1E2c3yOd',\n                bonus: true,\n            },\n            {\n                name: 'Girl At Home',\n                spotifyId: '6VFpuI0DDmbC5UyWZQ4IRY',\n                bonus: true,\n            },\n        ],\n    },\n    {\n        name: '1989',\n        year: 2014,\n        spotifyId: '1yGbNOtRIgdIiGHOEBaZWf',\n        imageUrl: 'assets/covers/1989.jpeg',\n        tracks: [\n            {\n                name: 'Welcome To New York',\n                spotifyId: '3nRmDz7qGCvsMS30rGGY0x',\n            },\n            { name: 'Blank Space', spotifyId: '1u8c2t2Cy7UBoG4ArRcF5g' },\n            { name: 'Style', spotifyId: '0ug5NqcwcFR2xrfTkc7k8e' },\n            { name: 'Out Of The Woods', spotifyId: '0qUnBLZ8bJqUNEeQgayL9t' },\n            {\n                name: 'All You Had To Do Was Stay',\n                spotifyId: '6aLOekfwbytwWvQftxTEF0',\n            },\n            { name: 'Shake It Off', spotifyId: '0cqRj7pUJDkTCEsJkx8snD' },\n            { name: 'I Wish You Would', spotifyId: '5gRYrtvyVyaCRvLt56OfuV' },\n            { name: 'Bad Blood', spotifyId: '2NlmmAjGYrrjAp0MED5rGx' },\n            { name: 'Wildest Dreams', spotifyId: '4A4A6dwl5DqdqrZaEtKGPR' },\n            {\n                name: 'How You Get The Girl',\n                spotifyId: '0fM9dEhUFV4MHDuJgrcfOv',\n            },\n            { name: 'This Love', spotifyId: '4L560fic5PaTuCFm6CviKa' },\n            { name: 'I Know Places', spotifyId: '6EwNJz8CuVsrsLvXprJ20Q' },\n            { name: 'Clean', spotifyId: '1NmVZsG18CzCAtw7rnV3yA' },\n            {\n                name: 'Wonderland',\n                spotifyId: '6RvRzl1YJTDnUvdOtV21IK',\n                bonus: true,\n            },\n            {\n                name: 'You Are In Love',\n                spotifyId: '2KrOAg6FftbjgSKdd2a4rS',\n                bonus: true,\n            },\n            {\n                name: 'New Romantics',\n                spotifyId: '0qAIiGFKLdV1xpNlEhjpq8',\n                bonus: true,\n            },\n        ],\n    },\n    {\n        name: 'reputation',\n        year: 2017,\n        spotifyId: '6DEjYFkNZh67HP7R9PSZvv',\n        imageUrl: 'assets/covers/reputation.jpeg',\n        tracks: [\n            { name: '...Ready For It?', spotifyId: '2yLa0QULdQr0qAIvVwN6B5' },\n            {\n                name: 'End Game',\n                spotifyId: '2x0WlnmfG39ZuDmstl9xfX',\n            },\n            {\n                name: 'I Did Something Bad',\n                spotifyId: '4svZDCRz4cJoneBpjpx8DJ',\n            },\n            { name: \"Don't Blame Me\", spotifyId: '1R0a2iXumgCiFb7HEZ7gUE' },\n            { name: 'Delicate', spotifyId: '6NFyWDv5CjfwuzoCkw47Xf' },\n            {\n                name: 'Look What You Made Me Do',\n                spotifyId: '1P17dC1amhFzptugyAO7Il',\n            },\n            { name: 'So It Goes...', spotifyId: '5PxFv9yJEg9dxvbZggykro' },\n            { name: 'Gorgeous', spotifyId: '1ZY1PqizIl78geGM4xWlEA' },\n            { name: 'Getaway Car', spotifyId: '0VE4kBnHJUgtMf0dy6DRmW' },\n            { name: 'King Of My Heart', spotifyId: '7HuBDWi18s4aJM8UFnNheH' },\n            {\n                name: 'Dancing With Our Hands Tied',\n                spotifyId: '7I7JbDv63ZJJsSi24DyJrz',\n            },\n            { name: 'Dress', spotifyId: '6oVxXO5oQ4pTpO8RSnkzvv' },\n            {\n                name: \"This Is Why We Can't Have Nice Things\",\n                spotifyId: '07NxDD1iKCHbAldceD7QLP',\n            },\n            {\n                name: 'Call It What You Want',\n                spotifyId: '1GwMQaZz6Au3QLDbjbMdme',\n            },\n            { name: \"New Year's Day\", spotifyId: '7F5oktn5YOsR9eR5YsFtqb' },\n        ],\n    },\n    {\n        name: 'Lover',\n        year: 2019,\n        spotifyId: '0WGakTFs8cnggcYsHjIhgy',\n        imageUrl: 'assets/covers/lover.jpeg',\n        tracks: [\n            {\n                name: 'I Forgot That You Existed',\n                spotifyId: '43rA71bccXFGD4C8GOpIlN',\n            },\n            { name: 'Cruel Summer', spotifyId: '1BxfuPKGuaTgP7aM0Bbdwr' },\n            { name: 'Lover', spotifyId: '1dGr1c8CrMLDpV6mPbImSI' },\n            { name: 'The Man', spotifyId: '3RauEVgRgj1IuWdJ9fDs70' },\n            { name: 'The Archer', spotifyId: '3pHkh7d0lzM2AldUtz2x37' },\n            { name: 'I Think He Knows', spotifyId: '2YWtcWi3a83pdEg3Gif4Pd' },\n            {\n                name: 'Miss Americana & The Heartbreak Prince',\n                spotifyId: '214nt20w5wOxJnY462klLw',\n            },\n            { name: 'Paper Rings', spotifyId: '4y5bvROuBDPr5fuwXbIBZR' },\n            { name: 'Cornelia Street', spotifyId: '12M5uqx0ZuwkpLp5rJim1a' },\n            {\n                name: 'Death By A Thousand Cuts',\n                spotifyId: '2dgFqt3w9xIQRjhPtwNk3D',\n            },\n            { name: 'London Boy', spotifyId: '1LLXZFeAHK9R4xUramtUKw' },\n            {\n                name: \"Soon You'll Get Better (feat. Dixie Chicks)\",\n                spotifyId: '4AYtqFyFbX0Xkc2wtcygTr',\n            },\n            { name: 'False God', spotifyId: '5hQSXkFgbxjZo9uCwd11so' },\n            {\n                name: 'You Need To Calm Down',\n                spotifyId: '6RRNNciQGZEXnqk8SQ9yv5',\n            },\n            { name: 'Afterglow', spotifyId: '1SymEzIT3H8UZfibCs3TYi' },\n            {\n                name: 'ME! (feat. Brendon Urie of Panic! At The Disco)',\n                spotifyId: '2Rk4JlNc2TPmZe2af99d45',\n            },\n            {\n                name: \"It's Nice To Have A Friend\",\n                spotifyId: '1SmiQ65iSAbPto6gPFlBYm',\n            },\n            { name: 'Daylight', spotifyId: '1fzAuUVbzlhZ1lJAx9PtY6' },\n        ],\n    },\n    {\n        name: 'Other releases (EPs, non-album singles, features)',\n        tracks: [\n            {\n                name: 'Christmases When You Were Mine',\n                spotifyId: '1g09DZjQ7yBommCT6POY2n',\n                year: 2007,\n                imageUrl: 'assets/covers/hc.jpeg',\n                albumName: 'The Taylor Swift Holiday Collection',\n            },\n            {\n                name: 'Christmas Must Be Something More',\n                spotifyId: '31JVjy3XWnh6C2zf4kLCXN',\n                year: 2007,\n                imageUrl: 'assets/covers/hc.jpeg',\n                albumName: 'The Taylor Swift Holiday Collection',\n            },\n            {\n                name: 'Beautiful Eyes',\n                spotifyId: '1a5kAD0K7zijLlZokbRDe2',\n                year: 2008,\n                imageUrl: 'assets/covers/be.jpg',\n                albumName: 'Beautiful Eyes (EP)',\n            },\n            {\n                name: 'I Heart?',\n                spotifyId: '2HxTSD72RBQR31HtyX72sf',\n                year: 2008,\n                imageUrl: 'assets/covers/be.jpg',\n                albumName: 'Beautiful Eyes (EP)',\n            },\n            {\n                name: 'Crazier',\n                spotifyId: '5vyxXfD5gLlyPxGZMEjtmd',\n                year: 2009,\n                imageUrl: 'assets/covers/hm.jpeg',\n                albumName: 'Hannah Montana: The Movie OST',\n            },\n            {\n                name: 'Today Was A Fairytale',\n                spotifyId: '4pFvEWbjBpPUdYRQly0THs',\n                year: 2010,\n                imageUrl: 'assets/covers/twaf.jpeg',\n                albumName: \"Valentine's Day OST\",\n            },\n            {\n                name: 'Safe & Sound',\n                spotifyId: '0z9UVN8VBHJ9HdfYsOuuNf',\n                year: 2011,\n                imageUrl: 'assets/covers/thg.jpeg',\n                albumName:\n                    'The Hunger Games: Songs from District 12 and Beyond',\n            },\n            {\n                name: 'Eyes Open',\n                spotifyId: '7wjbSn8QHsxqKXU5M0jXGM',\n                year: 2012,\n                imageUrl: 'assets/covers/thg.jpeg',\n                albumName:\n                    'The Hunger Games: Songs from District 12 and Beyond',\n            },\n            {\n                name: 'Ronan',\n                spotifyId: '0Nw8hv79MLJa1yjtsEgz08',\n                year: 2012,\n                imageUrl: 'assets/covers/ronan.jpeg',\n                albumName: 'Ronan (Single)',\n            },\n            {\n                name: 'Sweeter than Fiction',\n                year: 2013,\n                spotifyId: '1SpG93jxIWE2NpUstwxBPI',\n                imageUrl: 'assets/covers/stf.jpeg',\n                albumName: 'One Chance OST',\n            },\n            {\n                name: \"Highway Don't Care\",\n                spotifyId: '60hGQrn24APqEFSLObLeDc',\n                year: 2013,\n                imageUrl: 'assets/covers/tlof.jpeg',\n                albumName: 'Two Lanes of Freedom',\n            },\n            {\n                name: \"I Don't Wanna Live Forever\",\n                spotifyId: '6yIdwnpDHufLWgQcveTPMk',\n                year: 2016,\n                imageUrl: 'assets/covers/idwlf.jpeg',\n                albumName: 'Fifty Shades Darker OST',\n            },\n        ],\n    },\n];\n\nexport const getTrack = spotifyId => {\n    for (const album of albums) {\n        for (const track of album.tracks) {\n            if (track.spotifyId === spotifyId) {\n                return { album, track };\n            }\n        }\n    }\n    return new Error('Album not found');\n};\n\nexport const getTrackByShortenedId = shortenedId => {\n    for (const album of albums) {\n        for (const track of album.tracks) {\n            if (track.spotifyId.slice(1, 3) === shortenedId) {\n                return { album, track };\n            }\n        }\n    }\n    return new Error('Album not found');\n};\n\nexport const getFullTrackId = shortenedId => {\n    return getTrackByShortenedId(shortenedId).track.spotifyId;\n};\n","import React from 'react';\n\nimport { getTrack } from '../../api/albums';\n\nconst ReorderTracksTable = ({ tracks, removeTrack, moveTrack }) => {\n    const tableRows = tracks.map((track, index) => (\n        <TrackListTableRow\n            removeTrack={removeTrack}\n            moveTrack={moveTrack}\n            trackId={track}\n            index={index}\n            tracksLength={tracks.length}\n        />\n    ));\n\n    return (\n        <table className=\"table table-borderless table-alternate-colors table-responsive\">\n            <tbody>{tableRows}</tbody>\n        </table>\n    );\n};\n\nconst TrackListTableRow = ({\n    trackId,\n    index,\n    removeTrack,\n    moveTrack,\n    tracksLength,\n}) => {\n    const { track, album } = getTrack(trackId);\n    return (\n        <tr>\n            <th scope=\"row\" width=\"1%\">\n                <h4 className=\"mb-0\">{index + 1}</h4>\n            </th>\n            <td width=\"1%\">\n                <img\n                    src={album.imageUrl || track.imageUrl || ''}\n                    alt={album.name}\n                    className=\"album-image\"\n                />\n            </td>\n            <td>{track.name}</td>\n            <td width=\"1%\">\n                <OrderControlButtonGroup\n                    trackIndex={index}\n                    moveTrack={moveTrack}\n                    removeTrack={removeTrack}\n                    tracksLength={tracksLength}\n                />\n            </td>\n        </tr>\n    );\n};\n\nconst OrderControlButtonGroup = ({\n    trackIndex,\n    removeTrack,\n    moveTrack,\n    tracksLength,\n}) => (\n    <div className=\"btn-group\" role=\"group\">\n        <OrderControlButton\n            trackIndex={trackIndex}\n            moveTrack={moveTrack}\n            direction=\"up\"\n            disabled={trackIndex === 0}\n        />\n        <OrderControlButton\n            trackIndex={trackIndex}\n            moveTrack={moveTrack}\n            direction=\"down\"\n            disabled={trackIndex === tracksLength - 1}\n        />\n        <button\n            onClick={() => removeTrack(trackIndex)}\n            className=\"btn btn-block\"\n            type=\"button\"\n        >\n            <i className=\"fas fa-times\" />\n        </button>\n    </div>\n);\n\nconst OrderControlButton = ({ trackIndex, moveTrack, direction, disabled }) => (\n    <button\n        className=\"btn text-left\"\n        type=\"button\"\n        disabled={disabled}\n        onClick={() => moveTrack(trackIndex, direction)}\n    >\n        <i className={`fas fa-chevron-${direction}`} />\n    </button>\n);\n\nexport default ReorderTracksTable;\n","import React from 'react';\n\nimport ReorderTracksTable from '../common/ReorderTracksTable';\n\nconst SelectedTracksSection = ({ tracks, removeTrack, moveTrack }) => (\n    <div className=\"selection-page-section container shadow p-4 rounded-lg table-ranking\">\n        <h3>Currently selected tracks</h3>\n        {tracks.length > 0 ? (\n            <p>\n                Use the <i className=\"fas fa-chevron-up\" /> and{' '}\n                <i className=\"fas fa-chevron-down\" /> buttons to reorder your\n                selected tracks and click the <i className=\"fas fa-times\" />{' '}\n                icon to remove a track from your selection.\n            </p>\n        ) : (\n            <p>\n                Your selected tracks will appear here once you start selecting.\n                Go, go, go!\n            </p>\n        )}\n        <ReorderTracksTable\n            tracks={tracks}\n            removeTrack={removeTrack}\n            moveTrack={moveTrack}\n        />\n    </div>\n);\n\nexport default SelectedTracksSection;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SelectionPageFooter = ({ albumName, tracksLength, submitRanking }) => {\n    const redirectParams = {\n        pathname: 'share',\n        search: albumName ? `?album=${albumName}` : '',\n    };\n\n    return (\n        <div className=\"footer fixed-bottom shadow-lg\">\n            <div className=\"container\">\n                <div className=\"row p-3 justify-content-between text-center\">\n                    <div className=\"col-lg-auto align-self-center\">\n                        <h6 className=\"mb-0 selected-tracks\">\n                            Selected {tracksLength}/13 track(s)\n                        </h6>\n                    </div>\n                    {tracksLength === 13 ? (\n                        <div className=\"col-lg-auto align-self-center\">\n                            <Link\n                                onClick={() => submitRanking()}\n                                className=\"btn btn-footer\"\n                                to={redirectParams}\n                            >\n                                PROCEED!\n                            </Link>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SelectionPageFooter;\n","import React from 'react';\n\nimport './AlbumAccordion.css';\n\nconst AlbumAccordion = ({ albums, handleClick, selectedTracks }) => {\n    const albumCards = albums.map(album => (\n        <AlbumCard\n            handleClick={handleClick}\n            album={album}\n            selectedTracks={selectedTracks}\n        />\n    ));\n\n    return (\n        <div className=\"accordion\" id=\"album-accordion\">\n            {albumCards}\n        </div>\n    );\n};\n\nconst AlbumCard = ({ album, handleClick, selectedTracks }) => (\n    <div className=\"card album-card\">\n        <div\n            className=\"card-header collapse-btn p-0\"\n            id={`heading-${album.spotifyId}`}\n        >\n            <AlbumCardCollapseButton album={album} />\n        </div>\n        <AlbumCardTrackList\n            album={album}\n            handleClick={handleClick}\n            selectedTracks={selectedTracks}\n        />\n    </div>\n);\n\nconst AlbumCardCollapseButton = ({ album }) => (\n    <button\n        className=\"btn btn-block text-left p-3\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target={`#collapse-${album.spotifyId}`}\n        aria-expanded=\"true\"\n        aria-controls={`collapse-${album.spotifyId}`}\n    >\n        <b>{album.name}</b> {album.year ? `(${album.year})` : ''}{' '}\n        <span className=\"float-right\">\n            <i className=\"fas fa-chevron-down\" />\n        </span>\n    </button>\n);\n\nexport const AlbumCardTrackList = ({\n    album,\n    handleClick,\n    selectedTracks,\n    collapse = true,\n}) => {\n    const trackListItems = album.tracks.map(track => (\n        <AlbumCardTrackListItem\n            track={track}\n            selected={selectedTracks.includes(track.spotifyId)}\n            handleClick={handleClick}\n        />\n    ));\n\n    return (\n        <div\n            id={`collapse-${album.spotifyId}`}\n            className={collapse ? 'collapse' : ''}\n            aria-labelledby={`heading-${album.spotifyId}`}\n            data-parent=\"#album-accordion\"\n        >\n            <div className=\"list-group list-group-flush\">{trackListItems}</div>\n        </div>\n    );\n};\n\nconst AlbumCardTrackListItem = ({ track, selected, handleClick }) => (\n    <button\n        type=\"button\"\n        className={`list-group-item list-group-item-action ${\n            selected ? 'selected-track' : ''\n        }`}\n        onClick={() => handleClick(track.spotifyId)}\n    >\n        {track.name}\n        <span className=\"float-right\">\n            <i className={`far fa${selected ? '-check' : ''}-square`} />\n        </span>\n    </button>\n);\n\nexport default AlbumAccordion;\n","import React from 'react';\n\nimport AlbumAccordion, { AlbumCardTrackList } from './AlbumAccordion';\n\nimport { albums } from '../../api/albums';\n\nconst TrackSelectionSection = ({ tracks, handleClick, albumName }) =>\n    albumName === 'lover' ? (\n        <LoverTracksSelectionSection\n            album={albums[6]}\n            tracks={tracks}\n            handleClick={handleClick}\n        />\n    ) : (\n        <OverallTrackSelectionSection\n            tracks={tracks}\n            handleClick={handleClick}\n        />\n    );\n\nconst OverallTrackSelectionSection = ({ tracks, handleClick }) => (\n    <div className=\"selection-page-section container shadow p-4 rounded-lg\">\n        <p>\n            Click an album title to reveal its tracklist, and then click a song\n            title to add it to your 13 favorite songs.\n        </p>\n        <AlbumAccordion\n            albums={albums}\n            handleClick={handleClick}\n            selectedTracks={tracks}\n        />\n    </div>\n);\n\nconst LoverTracksSelectionSection = ({ album, tracks, handleClick }) => (\n    <div className=\"selection-page-section container shadow p-4 rounded-lg\">\n        <h3>Click a song title to add it to your 13 favorite Lover songs.</h3>\n        <div className=\"card album-card\">\n            <div className=\"card-header collapse-btn p-0\">\n                <button className=\"btn btn-block text-left p-3\" type=\"button\">\n                    <b>{album.name}</b> {album.year ? `(${album.year})` : ''}{' '}\n                </button>\n            </div>\n            <AlbumCardTrackList\n                collapse={false}\n                album={album}\n                handleClick={handleClick}\n                selectedTracks={tracks}\n            />\n        </div>\n    </div>\n);\n\nexport default TrackSelectionSection;\n","import axios from 'axios';\n\nconst axiosInstance = axios.create({\n    baseURL:\n        process.env.NODE_ENV === 'development'\n            ? 'http://localhost:5000/api'\n            : 'https://ts-ranked-server.jrobsonjr.now.sh/api',\n});\n\nexport const getOverallScores = () =>\n    axiosInstance.get('/scores').then(response => response.data);\n\nexport const getLoverScores = () =>\n    axiosInstance.get('/scores-lover').then(response => response.data);\n\nexport const postRanking = (tracks, albumName) =>\n    axiosInstance\n        .post('/rankings', { scope: albumName, tracks })\n        .then(response => response.data);\n","import React, { Component } from 'react';\nimport queryString from 'querystring';\n\nimport SelectedTracksSection from './SelectedTracksSection';\nimport SelectionPageFooter from './SelectionPageFooter';\nimport TrackSelectionSection from './TrackSelectionSection';\n\nimport { postRanking } from '../../api/requests';\n\nimport './SelectionPage.css';\n\nclass SelectionPage extends Component {\n    constructor(props) {\n        super(props);\n        const albumName = queryString.parse(props.location.search)['?album'];\n        const itemName = albumName ? albumName : 'tracks';\n        const tracks = localStorage.getItem(itemName)\n            ? localStorage.getItem(itemName).split(',')\n            : [];\n        this.state = {\n            itemName,\n            tracks,\n            contributed: localStorage.getItem('contributed')\n                ? localStorage.getItem('contributed')\n                : '',\n        };\n    }\n\n    submitRanking = async () => {\n        const { itemName, contributed, tracks } = this.state;\n        if (!contributed || !contributed.includes(itemName)) {\n            this.setState({ contributed: contributed.concat(`, ${itemName}`) });\n            localStorage.setItem(\n                'contributed',\n                contributed.concat(`, ${itemName}`)\n            );\n            postRanking(tracks, itemName).then(res => console.log(res));\n        }\n    };\n\n    handleClick = id => {\n        this.setState(prevState => {\n            let tracks = prevState.tracks;\n            if (tracks.includes(id)) {\n                tracks = tracks.filter(value => value !== id);\n            } else {\n                tracks.push(id);\n            }\n            localStorage.setItem(prevState.itemName, tracks.join(','));\n            return { tracks };\n        });\n    };\n\n    moveTrack = (index, direction) => {\n        const { tracks, itemName } = this.state;\n        const auxIndex = direction === 'up' ? index - 1 : index + 1;\n        const aux = tracks[auxIndex];\n        tracks[auxIndex] = tracks[index];\n        tracks[index] = aux;\n        localStorage.setItem(itemName, tracks.join(','));\n        this.setState({ tracks });\n    };\n\n    removeTrack = index => {\n        this.setState(prevState => {\n            let tracks = prevState.tracks;\n            tracks.splice(index, 1);\n            localStorage.setItem(prevState.itemName, tracks.join(','));\n            return { tracks };\n        });\n    };\n\n    render() {\n        const { tracks, itemName } = this.state;\n\n        return (\n            <div className=\"selection-page row\">\n                <div className=\"col-12\">\n                    <h1 className=\"selection-page-title text-center px-2 py-4\">\n                        Select your 13 favorite songs\n                    </h1>\n                </div>\n                <div className=\"col-lg-6\">\n                    <TrackSelectionSection\n                        albumName={itemName}\n                        tracks={tracks}\n                        handleClick={this.handleClick}\n                    />\n                </div>\n                <div className=\"col-lg-6\">\n                    <SelectedTracksSection\n                        tracks={tracks}\n                        removeTrack={this.removeTrack}\n                        moveTrack={this.moveTrack}\n                    />\n                </div>\n                <SelectionPageFooter\n                    submitRanking={this.submitRanking}\n                    tracksLength={tracks.length}\n                    albumName={itemName === 'tracks' ? '' : itemName}\n                />\n            </div>\n        );\n    }\n}\n\nexport default SelectionPage;\n","import React from 'react';\n\nimport { getTrack } from '../../api/albums';\n\nimport './RankingPageTrackList.css';\n\nconst RankingPageTrackList = ({ tracks, isAlbumRanking }) => {\n    const sortedTracks = tracks.sort((a, b) => b.score - a.score);\n    const tableRows = sortedTracks.map((track, index) => (\n        <TrackListTableRow\n            trackId={track.trackId}\n            index={index}\n            isAlbumRanking={isAlbumRanking}\n        />\n    ));\n\n    return (\n        <table className=\"table table-bordered table-ranking\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">TITLE</th>\n                    {!isAlbumRanking && <th scope=\"col\">ALBUM</th>}\n                </tr>\n            </thead>\n            <tbody>{tableRows}</tbody>\n        </table>\n    );\n};\n\nconst TrackListTableRow = ({ trackId, index, isAlbumRanking }) => {\n    const { track, album } = getTrack(trackId);\n    const albumName = track.albumName ? track.albumName : album.name;\n    const albumImage = album.imageUrl || track.imageUrl || '';\n    return (\n        <tr>\n            <th scope=\"row\" width=\"1%\">\n                {index + 1}\n            </th>\n            <td>\n                <img\n                    src={albumImage}\n                    alt={albumName}\n                    className=\"album-image mr-2\"\n                />\n                {track.name}\n            </td>\n            {!isAlbumRanking && (\n                <td>\n                    <i>{albumName}</i>\n                </td>\n            )}\n        </tr>\n    );\n};\n\nexport default RankingPageTrackList;\n","import React from 'react';\n\nimport './PageWrapper.css';\n\nconst PageWrapper = ({ children }) => (\n    <div className=\"mx-1\">\n        <div className=\"container page-wrapper shadow p-4 rounded-lg\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default PageWrapper;\n","import React, { Component } from 'react';\n\nimport { getOverallScores, getLoverScores } from '../../api/requests';\n\nimport RankingPageTrackList from './RankingPageTrackList';\nimport PageWrapper from '../common/PageWrapper';\n\nimport './RankingPage.css';\n\nclass RankingPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loverTracks: [],\n            overallTracks: [],\n        };\n    }\n\n    componentDidMount() {\n        getOverallScores().then(response => {\n            this.setState({ overallTracks: response.data });\n        });\n        getLoverScores().then(response => {\n            this.setState({ loverTracks: response.data });\n        });\n    }\n\n    render() {\n        const { overallTracks, loverTracks } = this.state;\n        console.log(overallTracks, loverTracks);\n        return (\n            <PageWrapper>\n                <h2>Overall Ranking</h2>\n                <p>Based on all user rankings.</p>\n                <RankingPageTrackList tracks={overallTracks} />\n                <h2>Lover Ranking</h2>\n                <p>Based on all user rankings.</p>\n                <RankingPageTrackList tracks={loverTracks} isAlbumRanking />\n            </PageWrapper>\n        );\n    }\n}\n\nexport default RankingPage;\n","import React from 'react';\n\nimport { getTrack } from '../../api/albums';\n\nimport './TrackListTable.css';\n\nconst TrackListTable = ({ tracks, isAlbumRanking, isSharingPage }) => {\n    const tableRows = tracks.map((track, index) => (\n        <TrackListTableRow\n            id={track}\n            index={index}\n            isAlbumRanking={isAlbumRanking}\n        />\n    ));\n\n    return (\n        <table\n            className={`table table-striped table-borderless table-tracks${\n                isSharingPage ? '' : ' table-responsive'\n            }`}\n        >\n            <tbody>{tableRows}</tbody>\n        </table>\n    );\n};\n\nconst TrackListTableRow = ({ id, index, isAlbumRanking }) => {\n    const { track, album } = getTrack(id);\n    const albumName = track.albumName ? track.albumName : album.name;\n    const albumImage = (\n        <td width=\"1%\">\n            <img\n                className=\"album-image\"\n                src={album.imageUrl ? album.imageUrl : track.imageUrl}\n                alt={albumName}\n            />\n        </td>\n    );\n    return (\n        <tr>\n            <th scope=\"row\" width=\"1%\">\n                <b>{index + 1}</b>\n            </th>\n            {isAlbumRanking ? null : albumImage}\n            <td className=\"text-truncate\">{track.name}</td>\n        </tr>\n    );\n};\n\nexport default TrackListTable;\n","import axios from 'axios';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://api.imgur.com',\n    headers: { Authorization: 'Client-ID 9ba26223a321650' },\n});\n\nexport const postRankingToImgur = async node => {\n    const blob = await getRankingBlob(node);\n    const response = await axiosInstance.post('/3/upload/', blob);\n    return response.data.data.link;\n};\n\nexport const saveRankingAsPng = async node => {\n    const blob = await getRankingBlob(node);\n    saveAs(blob, 'tsranked-top13.png');\n};\n\nconst getRankingBlob = async node => {\n    const blob = await domtoimage.toBlob(node, {\n        style: { height: '100%', top: '0', position: 'relative', left: '0' },\n        bgcolor: '#ffffff',\n    });\n    return blob;\n};\n","import React from 'react';\n\nconst SpotifyConnectButton = () => (\n    <a className=\"btn btn-outline-primary\" href={buildAuthUrl()}>\n        <i className=\"fab fa-spotify\" /> Connect to Spotify\n    </a>\n);\n\nconst buildAuthUrl = () => {\n    const params = {\n        client_id: 'be0cee1062cc483999346bff5bcb7f2b',\n        response_type: 'token',\n        redirect_uri:\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:3000/spotify-auth'\n                : 'https://jrobsonjr.github.io/ts-ranked/spotify-auth',\n        scope: `playlist-modify-public playlist-modify-private`,\n    };\n    return `https://accounts.spotify.com/authorize?${encodeQueryParams(\n        params\n    )}`;\n};\n\nconst encodeQueryParams = params => {\n    const encodedParams = Object.keys(params).map(\n        param =>\n            `${encodeURIComponent(param)}=${encodeURIComponent(params[param])}`\n    );\n    return encodedParams.join('&');\n};\n\nexport default SpotifyConnectButton;\n","import React from 'react';\n\nimport { createPlaylist, addTracksToPlaylist } from 'spotify-web-sdk';\n\nconst SpotifyGeneratePlaylistButton = ({ userId, ids }) => {\n    const generatePlaylist = async ids => {\n        const newPlaylist = await createPlaylist(userId, 'TS Ranked', {\n            description: 'My top 13 Taylor Swift tracks.',\n        });\n        return addTracksToPlaylist(\n            newPlaylist.id,\n            ids\n                .filter(id => id !== 'unavailable')\n                .map(i => `spotify:track:${i}`)\n        );\n    };\n\n    return (\n        <button\n            className=\"btn btn-outline-primary\"\n            onClick={() => generatePlaylist(ids)}\n        >\n            <i className=\"fab fa-spotify\" /> Save as Spotify playlist\n        </button>\n    );\n};\n\nexport default SpotifyGeneratePlaylistButton;\n","import React from 'react';\n\nimport { getTrack } from '../../api/albums';\nimport { saveRankingAsPng } from '../../api/images';\nimport SpotifyConnectButton from '../spotify/SpotifyConnectButton';\nimport SpotifyGeneratePlaylistButton from '../spotify/SpotifyGeneratePlaylistButton';\n\nconst SharingPageFooter = ({\n    albumName,\n    tracks,\n    spotifyToken,\n    spotifyUserId,\n    isOverallRanking,\n}) => {\n    const { track } = getTrack(tracks[0]);\n    const ids = tracks.map(t => t.slice(1, 3)).join('');\n    const spotifyButton = spotifyToken ? (\n        <SpotifyGeneratePlaylistButton userId={spotifyUserId} ids={tracks} />\n    ) : (\n        <SpotifyConnectButton />\n    );\n    const resultsUrl = buildUrl(\n        'https://jrobsonjr.github.io/ts-ranked/?p=/results',\n        { tracks: ids, album: albumName !== 'tracks' ? albumName : '' }\n    );\n\n    return (\n        <div className=\"sharing-page-footer\">\n            <div className=\"row\">\n                <div className=\"col-auto mb-1\">\n                    <SaveAsPngButton />\n                </div>\n                <div className=\"col-auto mb-1\">\n                    <ShareToTumblrButton\n                        resultsUrl={resultsUrl}\n                        albumName={albumName}\n                        ids={ids}\n                        favoriteTrack={track.name}\n                    />\n                </div>\n                <div className=\"col-auto mb-1\">\n                    <ShareToTwitterButton\n                        resultsUrl={resultsUrl}\n                        albumName={albumName}\n                        ids={ids}\n                        favoriteTrack={track.name}\n                    />\n                </div>\n                <div className=\"col-auto mb-1\">\n                    {isOverallRanking && spotifyButton}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst ShareToTwitterButton = ({\n    ids,\n    favoriteTrack,\n    resultsUrl,\n    albumName,\n}) => {\n    const twitterBaseUrl = 'https://twitter.com/intent/tweet';\n    const twitterParams = {\n        text: `.@taylorswift13 has released over 100 songs throughout her career, but \"${favoriteTrack}\" is my favorite! Check out my Top 13 Taylor songs and create your own with TS Ranked:`,\n        hashtags: 'TaylorSwiftRanked',\n        url: resultsUrl,\n    };\n\n    if (albumName === 'lover') {\n        twitterParams.text = `.@taylorswift13's highly anticipated seventh album is out now! #Lover is full of great songs, but \"${favoriteTrack}\" is my favorite! Check out my Top 13 Lover songs and create your own with #TSRanked:`;\n    }\n\n    return (\n        <ShareToSocialMediaButton\n            baseUrl={twitterBaseUrl}\n            params={twitterParams}\n            name=\"Twitter\"\n        />\n    );\n};\n\nconst ShareToTumblrButton = ({ ids, favoriteTrack, resultsUrl, albumName }) => {\n    const tumblrBaseUrl = 'https://www.tumblr.com/widgets/share/tool';\n    const tumblrParams = {\n        canonicalUrl: resultsUrl,\n        posttype: 'link',\n        tags: `TSRanked, TaylorSwiftRanked, ${favoriteTrack}`,\n        content: resultsUrl,\n        caption: `<a href=\"https://taylorswift.tumblr.com\">@taylorswift</a> has released over 100 songs throughout her career, but <b>${favoriteTrack}</b> is my favorite! Share your own Top 13 Taylor songs with <a href=\"${resultsUrl}\">TS Ranked</a>.`,\n    };\n\n    if (albumName === 'lover') {\n        tumblrParams.tags = tumblrParams.tags.concat(', Lover');\n        tumblrParams.caption = `The highly anticipated <i>Lover</i> by <a href=\"https://taylorswift.tumblr.com\">@taylorswift</a> is out now! Taylor's seventh studio album is packed incredible tracks, but <b>${favoriteTrack}</b> is my favorite! Check out my Top 13 Lover songs and create your own with <a href=\"${resultsUrl}\">TS Ranked</a>.`;\n    }\n\n    return (\n        <ShareToSocialMediaButton\n            baseUrl={tumblrBaseUrl}\n            params={tumblrParams}\n            name=\"Tumblr\"\n        />\n    );\n};\n\nconst SaveAsPngButton = () => (\n    <button\n        className=\"btn btn-outline-primary\"\n        onClick={() => saveRankingAsPng(document.getElementById('share'))}\n    >\n        Save as PNG\n    </button>\n);\n\nconst ShareToSocialMediaButton = ({ baseUrl, params, name }) => (\n    <a\n        className=\"btn btn-outline-primary\"\n        href={buildUrl(baseUrl, params)}\n        role=\"button\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n    >\n        <i className={`fab fa-${name.toLowerCase()}`} /> Share to {name}\n    </a>\n);\n\nconst buildUrl = (baseUrl, params) => {\n    return `${baseUrl}?${encodeQueryParams(params)}`;\n};\n\nconst encodeQueryParams = params => {\n    const encodeParam = param => {\n        if (params[param]) {\n            return `${encodeURIComponent(param)}=${encodeURIComponent(\n                params[param]\n            )}`;\n        } else {\n            return '';\n        }\n    };\n    return Object.keys(params)\n        .map(param => encodeParam(param))\n        .filter(param => param !== '')\n        .join('&');\n};\n\nexport default SharingPageFooter;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { init, getCurrentUserProfile } from 'spotify-web-sdk';\nimport queryString from 'querystring';\n\nimport TrackListTable from '../common/TrackListTable';\nimport PageWrapper from '../common/PageWrapper';\nimport SharingPageFooter from './SharingPageFooter';\n\nimport './SharingPage.css';\n\nclass SharingPage extends Component {\n    constructor(props) {\n        super(props);\n        const albumName = queryString.parse(props.location.search)['?album'];\n        const itemName = albumName ? albumName : 'tracks';\n        const tracks = localStorage.getItem(itemName)\n            ? localStorage.getItem(itemName).split(',')\n            : [];\n        this.state = {\n            itemName,\n            tracks,\n            spotifyToken: this.props.location.state\n                ? this.props.location.state.token\n                : '',\n        };\n    }\n\n    componentDidMount() {\n        const { spotifyToken } = this.state;\n\n        if (spotifyToken) {\n            init({ token: spotifyToken });\n            getCurrentUserProfile().then(user => {\n                this.setState({ spotifyUserId: user.id });\n            });\n        }\n    }\n\n    render() {\n        const { itemName, tracks, spotifyToken, spotifyUserId } = this.state;\n\n        return tracks.length === 13 ? (\n            <PageWrapper>\n                <h1 className=\"text-center\">\n                    Here are your top 13 Taylor Swift tracks!\n                </h1>\n                <SharingPageRanking tracks={tracks} albumName={itemName} />\n                <TrackListTable tracks={tracks} />\n                <hr />\n                <SharingPageFooter\n                    albumName={itemName}\n                    tracks={tracks}\n                    isOverallRanking={itemName === 'tracks'}\n                    spotifyToken={spotifyToken}\n                    spotifyUserId={spotifyUserId}\n                />\n            </PageWrapper>\n        ) : (\n            <Redirect to=\"/select\" />\n        );\n    }\n}\n\nconst SharingPageRanking = ({ tracks, albumName }) => (\n    <div\n        className={`sharing-page-ranking${\n            albumName === 'lover' ? ' sharing-page-ranking-lover' : ''\n        }`}\n        id=\"share\"\n    >\n        <h4 className=\"text-center text-uppercase pb-2\">\n            {`My top 13 ${\n                albumName === 'tracks' ? 'Taylor Swift' : albumName\n            } songs`}\n        </h4>\n        <TrackListTable\n            isSharingPage\n            isAlbumRanking={albumName !== 'tracks'}\n            tracks={tracks}\n        />\n        <p className=\"text-right mb-0\">\n            <b>#TSRANKED</b>\n        </p>\n    </div>\n);\n\nexport default SharingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'querystring';\n\nimport PageWrapper from '../common/PageWrapper';\nimport TrackListTable from '../common/TrackListTable';\n\nimport { getFullTrackId } from '../../api/albums';\n\nclass ResultsPage extends Component {\n    constructor(props) {\n        super(props);\n        const queryParams = queryString.parse(props.location.search);\n        const albumName = queryParams['album'];\n        const itemName = albumName ? albumName : '';\n        const shortenedIds = queryParams['?tracks'].match(/.{1,2}/g);\n        const fullIds = shortenedIds.map(id => getFullTrackId(id));\n        this.state = {\n            itemName,\n            tracks: fullIds,\n        };\n    }\n\n    render() {\n        const { tracks, itemName } = this.state;\n\n        return (\n            <PageWrapper>\n                <h1 className=\"text-center text-uppercase py-2\">\n                    {`These are my top 13 ${\n                        itemName ? itemName : 'Taylor Swift'\n                    } songs!`}\n                </h1>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-lg-8 col-md-10 col-sm-12\">\n                        <TrackListTable tracks={tracks} />\n                        <Link\n                            className=\"btn btn-block btn-outline-primary\"\n                            href=\"/\"\n                        >\n                            Generate your own Top 13 with TS Ranked!\n                        </Link>\n                    </div>\n                </div>\n            </PageWrapper>\n        );\n    }\n}\n\nexport default ResultsPage;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst SpotifyAuth = ({ history }) => {\n    const token = history.location.hash.match('[#&]access_token=([^&]*)')[1];\n    const redirectParams = {\n        pathname: '/share',\n        state: { token },\n    };\n\n    return <Redirect to={redirectParams} />;\n};\n\nexport default SpotifyAuth;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Navbar from './Navbar';\nimport HomePage from '../home/HomePage';\nimport SelectionPage from '../selection-page/SelectionPage';\nimport RankingPage from '../ranking-page/RankingPage';\nimport SharingPage from '../sharing-page/SharingPage';\nimport ResultsPage from '../results-page/ResultsPage';\nimport SpotifyAuth from '../spotify/SpotifyAuth';\n\nconst App = () => (\n    <>\n        <Navbar />\n        <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/select\" component={SelectionPage} />\n            <Route exact path=\"/ranking\" component={RankingPage} />\n            <Route exact path=\"/share\" component={SharingPage} />\n            <Route exact path=\"/results\" component={ResultsPage} />\n            <Route exact path=\"/spotify-auth\" component={SpotifyAuth} />\n        </Switch>\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/app/App';\n\nimport './index.css';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}